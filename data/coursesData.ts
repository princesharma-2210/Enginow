// component/data/coursesData.ts

export const coursesData = [
  {
    id: "data-structures-algorithms",
    title: "Data Structures & Algorithms",
    description: "Master the fundamentals of DSA with practical examples",
    image: "/placeholder.svg?height=200&width=350",
    isNew: true,
    isFree: true,
    category: "Programming",
    color: "purple",
    youtubeLink: "https://www.youtube.com/embed/dQw4w9WgXcQ",
    modules: ["Arrays", "Linked Lists", "Stacks & Queues", "Trees", "Graphs"],
    timeline: [
      { time: "00:00", label: "Introduction" },
      { time: "02:30", label: "Arrays" },
      { time: "05:45", label: "Linked Lists" },
      { time: "10:20", label: "Stacks & Queues" },
      { time: "15:00", label: "Trees" },
      { time: "20:30", label: "Graphs" },
    ],
    exercises: [
      "Solve 10 array problems",
      "Implement a linked list",
      "Practice recursion",
    ],
    tasks: ["Build a stack with arrays", "Graph traversal mini-project"],
  },
  {
    id: "computer-organization-architecture",
    title: "Computer Organization & Architecture",
    description: "Understand the inner workings of computer systems",
    image: "/placeholder.svg?height=200&width=350",
    isNew: true,
    isFree: true,
    category: "Systems",
    color: "teal",
    youtubeLink: "https://www.youtube.com/embed/VIDEO_ID",
    modules: ["Digital Logic", "CPU Organization", "Memory Hierarchy", "I/O Systems"],
    timeline: [
      { time: "00:00", label: "Digital Logic" },
      { time: "05:00", label: "CPU Organization" },
      { time: "12:30", label: "Memory Hierarchy" },
      { time: "18:00", label: "I/O Systems" },
    ],
    exercises: ["Design a simple ALU", "Draw CPU datapath for a basic instruction"],
    tasks: ["Simulate memory hierarchy using Python"],
  },
  {
    id: "operating-system",
    title: "Operating Systems",
    description: "Learn about process management, memory, and file systems",
    image: "/placeholder.svg?height=200&width=350",
    isNew: false,
    isFree: true,
    category: "Systems",
    color: "orange",
    youtubeLink: "https://www.youtube.com/embed/VIDEO_ID",
    modules: ["Processes", "Threads", "Memory Management", "File Systems", "Scheduling"],
    timeline: [
      { time: "00:00", label: "Processes" },
      { time: "03:30", label: "Threads" },
      { time: "08:00", label: "Memory Management" },
      { time: "13:20", label: "File Systems" },
      { time: "18:45", label: "Scheduling" },
    ],
    exercises: ["Implement a simple scheduler in C", "Simulate process creation and termination"],
    tasks: ["Build a memory allocation simulator", "File system mini-project"],
  },
  {
    id: "advanced-java-programming",
    title: "Advanced Java Programming",
    description: "Take your Java skills to the next level",
    image: "/placeholder.svg?height=200&width=350",
    isNew: false,
    isFree: false,
    price: "₹999",
    category: "Programming",
    color: "pink",
    youtubeLink: "https://www.youtube.com/embed/VIDEO_ID",
    modules: ["Generics", "Collections Framework", "Streams", "Concurrency", "JVM Internals"],
    timeline: [
      { time: "00:00", label: "Generics" },
      { time: "04:30", label: "Collections Framework" },
      { time: "09:00", label: "Streams" },
      { time: "14:20", label: "Concurrency" },
      { time: "20:00", label: "JVM Internals" },
    ],
    exercises: ["Implement a generic stack", "Practice Java Streams operations"],
    tasks: ["Build a multi-threaded application"],
  },
  {
    id: "discrete-mathematics",
    title: "Discrete Mathematics",
    description: "Essential mathematical concepts for computer science",
    image: "/placeholder.svg?height=200&width=350",
    isNew: false,
    isFree: true,
    category: "Mathematics",
    color: "purple",
    youtubeLink: "https://www.youtube.com/embed/VIDEO_ID",
    modules: ["Set Theory", "Logic", "Relations & Functions", "Graph Theory", "Combinatorics"],
    timeline: [
      { time: "00:00", label: "Set Theory" },
      { time: "03:15", label: "Logic" },
      { time: "06:45", label: "Relations & Functions" },
      { time: "11:30", label: "Graph Theory" },
      { time: "16:00", label: "Combinatorics" },
    ],
    exercises: ["Solve logic problems", "Draw and analyze graphs"],
    tasks: ["Combinatorics mini-project"],
  },
  {
    id: "automata-theory",
    title: "Automata Theory",
    description: "Understand formal languages and computational models",
    image: "/placeholder.svg?height=200&width=350",
    isNew: false,
    isFree: true,
    category: "Theory",
    color: "teal",
    youtubeLink: "https://www.youtube.com/embed/VIDEO_ID",
    modules: ["Finite Automata", "Regular Expressions", "Context-Free Grammars", "Pushdown Automata", "Turing Machines"],
    timeline: [
      { time: "00:00", label: "Finite Automata" },
      { time: "04:00", label: "Regular Expressions" },
      { time: "08:30", label: "Context-Free Grammars" },
      { time: "13:00", label: "Pushdown Automata" },
      { time: "18:00", label: "Turing Machines" },
    ],
    exercises: ["Design a DFA/NFA", "Convert regex to automaton"],
    tasks: ["Build a small parser using CFG"],
  },
  {
    id: "c-programming",
    title: "C Programming",
    description: "Learn the fundamentals of C programming language",
    image: "/placeholder.svg?height=200&width=350",
    isNew: false,
    isFree: true,
    category: "Programming",
    color: "orange",
    youtubeLink: "https://www.youtube.com/embed/VIDEO_ID",
    modules: ["Syntax & Data Types", "Pointers", "Arrays", "Functions", "File I/O"],
    timeline: [
      { time: "00:00", label: "Syntax & Data Types" },
      { time: "04:00", label: "Pointers" },
      { time: "08:30", label: "Arrays" },
      { time: "12:00", label: "Functions" },
      { time: "16:00", label: "File I/O" },
    ],
    exercises: ["Write C programs using arrays and pointers", "Implement basic functions"],
    tasks: ["File I/O mini-project"],
  },
  {
    id: "cpp-programming",
    title: "C++ Programming",
    description: "Master object-oriented programming with C++",
    image: "/placeholder.svg?height=200&width=350",
    isNew: false,
    isFree: true,
    category: "Programming",
    color: "pink",
    youtubeLink: "https://www.youtube.com/embed/VIDEO_ID",
    modules: ["OOP Concepts", "STL", "Templates", "Exception Handling", "File I/O"],
    timeline: [
      { time: "00:00", label: "OOP Concepts" },
      { time: "04:00", label: "STL" },
      { time: "08:30", label: "Templates" },
      { time: "12:00", label: "Exception Handling" },
      { time: "16:00", label: "File I/O" },
    ],
    exercises: ["Implement classes and objects", "Use STL containers"],
    tasks: ["Build a small C++ project using OOP"],
  },
  {
    id: "database-management-systems",
    title: "Database Management Systems",
    description: "Learn SQL and database design principles",
    image: "/placeholder.svg?height=200&width=350",
    isNew: false,
    isFree: false,
    price: "₹799",
    category: "Systems",
    color: "purple",
    youtubeLink: "https://www.youtube.com/embed/VIDEO_ID",
    modules: ["ER Modeling", "Normalization", "SQL Queries", "Transactions", "Indexing & Optimization"],
    timeline: [
      { time: "00:00", label: "ER Modeling" },
      { time: "03:30", label: "Normalization" },
      { time: "07:00", label: "SQL Queries" },
      { time: "12:00", label: "Transactions" },
      { time: "16:30", label: "Indexing & Optimization" },
    ],
    exercises: ["Create ER diagrams", "Write SQL queries for sample DB"],
    tasks: ["Normalize a database schema", "Build a small SQL project"],
  },
  {
    id: "advanced-algorithms",
    title: "Advanced Algorithms",
    description: "Deep dive into complex algorithmic techniques",
    image: "/placeholder.svg?height=200&width=350",
    isNew: true,
    isFree: false,
    price: "₹1299",
    category: "Programming",
    color: "teal",
    youtubeLink: "https://www.youtube.com/embed/VIDEO_ID",
    modules: ["Greedy Algorithms", "Dynamic Programming", "Graph Algorithms", "NP-Completeness", "Approximation Algorithms"],
    timeline: [
      { time: "00:00", label: "Greedy Algorithms" },
      { time: "05:00", label: "Dynamic Programming" },
      { time: "10:30", label: "Graph Algorithms" },
      { time: "16:00", label: "NP-Completeness" },
      { time: "20:30", label: "Approximation Algorithms" },
    ],
    exercises: ["Implement greedy and DP problems", "Solve graph problems"],
    tasks: ["Mini-project: shortest path algorithms"],
  },
  {
    id: "machine-learning-fundamentals",
    title: "Machine Learning Fundamentals",
    description: "Introduction to ML concepts and algorithms",
    image: "/placeholder.svg?height=200&width=350",
    isNew: true,
    isFree: false,
    price: "₹1499",
    category: "AI",
    color: "orange",
    youtubeLink: "https://www.youtube.com/embed/VIDEO_ID",
    modules: ["Linear Regression", "Logistic Regression", "Decision Trees", "Clustering", "Neural Networks"],
    timeline: [
      { time: "00:00", label: "Linear Regression" },
      { time: "04:30", label: "Logistic Regression" },
      { time: "09:00", label: "Decision Trees" },
      { time: "14:30", label: "Clustering" },
      { time: "19:00", label: "Neural Networks" },
    ],
    exercises: ["Implement regression and classification models", "Practice clustering algorithms"],
    tasks: ["Build a simple ML model with Python"],
  },
  {
    id: "web-development-bootcamp",
    title: "Web Development Bootcamp",
    description: "Full-stack web development with modern technologies",
    image: "/placeholder.svg?height=200&width=350",
    isNew: false,
    isFree: false,
    price: "₹1999",
    category: "Web",
    color: "pink",
    youtubeLink: "https://www.youtube.com/embed/VIDEO_ID",
    modules: ["HTML & CSS", "JavaScript", "React", "Node.js", "Database Integration"],
    timeline: [
      { time: "00:00", label: "HTML & CSS" },
      { time: "03:30", label: "JavaScript" },
      { time: "08:00", label: "React" },
      { time: "13:00", label: "Node.js" },
      { time: "18:00", label: "Database Integration" },
    ],
    exercises: ["Build a static website", "Create React components"],
    tasks: ["Full-stack mini-project"],
  },
];
